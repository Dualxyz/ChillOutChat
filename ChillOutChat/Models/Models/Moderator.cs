///////////////////////////////////////////////////////////
//  Moderator.cs
//  Implementation of the Class Moderator
//  Generated by Enterprise Architect
//  Created on:      04-jun-2023 09:37:10
//  Original author: Andrej
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using chatpkg;
namespace chatpkg {
	public class Moderator {

		private int currentCommand;
		public List<Command> history;

		public Moderator(){
		}

        public Moderator(int currentCommand, List<Command> history)
        {
            this.currentCommand = currentCommand;
            this.history = history;
        }

        ~Moderator(){

		}

		/// 
		/// <param name="command"></param>
		public void AddAndExecute(Command command){
            command.Execute();

            if (history.Count > currentCommand)
            {
                history.RemoveRange(currentCommand, history.Count - currentCommand);
            }

            history.Add(command);
            currentCommand++;
        }

        public void HideLine(ChatRoom chatRoom, ChatLine chatLine)
        {
            if (chatRoom == null || chatLine == null)
                return;
            AddAndExecute(new HideLineCommand(chatRoom, chatLine));
        }

        public void Redo()
        {
            if (currentCommand > history.Count - 1)
                return;
            Command command = history[currentCommand++];
            command.Execute();
        }

        public void Undo()
        {
            if (currentCommand <= 0)
                return;
            --currentCommand;
            Command command = history[currentCommand];
            command.UnExecute();
        }

	}//end Moderator

}//end namespace chatpkg